syntax = "proto3";

package comment;

service CommentService {
  rpc NewComment(NewCommentRequest) returns (CommonResponse) {}
  rpc UpdateComment(UpdateCommentRequest) returns (CommonResponse) {}
  rpc DeleteComment(DeleteCommentRequest) returns (DeleteCommentResponse) {}
  rpc GetPublicationComments(GetPublicationCommentsRequest) returns (PaginateResponse) {}
  rpc GetResponseComments(GetResponseCommentsRequest) returns (PaginateResponse) {}
}

message User {
  int32 id = 1;
  string username = 2;
  string email = 3;
  string full_name = 4;
  string image_url = 5;
  string created_at = 6;
  string updated_at = 7;
}

message Comment {
  int32 id = 1;
  optional string text = 2;
  optional string resource_url = 3;
  int32 publication_id = 4;
  User user = 5;
  optional Comment parent_comment = 6;
  string created_at = 7;
  string updated_at = 8;
}

message PaginateResponse {
  int32 page = 1;
  int32 limit = 2;
  int32 total_comments = 3;
  int32 total_pages = 4;
  repeated Comment comments = 5;
}

message CommonResponse {
  bool success = 1;
  string message = 2;
  Comment comment = 3;
}

// NewComment
message NewCommentRequest {
  string text = 2;
  string resource = 3;
  int32 user_id = 4;
  int32 publication_id = 5;
  int32 parent_comment = 6;
}

// UpdateComment
message UpdateCommentRequest {
  int32 id = 1;
  string text = 2;
  string resource = 3;
}

// DeleteComment
message DeleteCommentRequest {
  int32 id = 1;
}

message DeleteCommentResponse {
  bool success = 1;
  string message = 2;
}

// GetPublicationComments
message GetPublicationCommentsRequest {
  int32 publication_id = 1;
  int32 page = 2;
  int32 limit = 3;
}

// GetResponseComments
message GetResponseCommentsRequest {
  int32 parent_comment_id = 1;
  int32 page = 2;
  int32 limit = 3;
}